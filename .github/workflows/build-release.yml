name: Build Extensions (Bun)

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.1.30'   # stabile Version pinnen

      - name: Install deps (bun)
        run: bun install --frozen-lockfile

      - name: Ensure zip is available
        run: sudo apt-get update && sudo apt-get install -y zip

      - name: Build (minify + copy + zip)
        run: bun run build:all

      - name: Upload CI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-zips
          path: |
            dist/immo24-chromium.zip
            dist/immo24-firefox.zip

      - name: Determine version from tag or package.json
        id: ver
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
            echo "version=${TAG#v}" >> "$GITHUB_OUTPUT"
          else
            VER=$(jq -r .version package.json)
            echo "version=${VER}" >> "$GITHUB_OUTPUT"
          fi

      - name: Publish packages into repo (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        env:
          VERSION: ${{ steps.ver.outputs.version }}
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
        run: |
          # Artefakte tempor√§r sichern
          mkdir -p /tmp/pkg
          cp dist/immo24-chromium.zip "/tmp/pkg/immo24-chromium-${VERSION}.zip"
          cp dist/immo24-firefox.zip  "/tmp/pkg/immo24-firefox-${VERSION}.zip"

          # Auf Default-Branch wechseln
          git fetch origin "${DEFAULT_BRANCH}"
          git checkout "${DEFAULT_BRANCH}"

          # Pakete ins Repo legen
          mkdir -p "packages/${VERSION}"
          cp /tmp/pkg/*.zip "packages/${VERSION}/"

          # commit & push
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "packages/${VERSION}"
          git commit -m "chore(release): add packages for v${VERSION}" || echo "No changes to commit"
          git push origin "${DEFAULT_BRANCH}"

      - name: Create GitHub Release (attach zips)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/immo24-chromium.zip
            dist/immo24-firefox.zip
          generate_release_notes: true
